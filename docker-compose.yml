version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: todoapp-postgres
    environment:
      POSTGRES_USER: todouser
      POSTGRES_PASSWORD: todopass123
      POSTGRES_DB: todoapp
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - todoapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todouser -d todoapp"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 后端B - 数据存储服务
  backend-b:
    build:
      context: ./backend-b
      dockerfile: Dockerfile
    container_name: todoapp-backend-b
    environment:
      PORT_B: 4000
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: todoapp
      POSTGRES_USER: todouser
      POSTGRES_PASSWORD: todopass123
    ports:
      - "4000:4000"
    networks:
      - todoapp-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

    # 后端A - 智能分类服务
  backend-a:
    build:
      context: ./backend-a
      dockerfile: Dockerfile
    container_name: todoapp-backend-a
    environment:
      PORT: 3000
      BACKEND_B_URL: http://backend-b:4000
    ports:
      - "3000:3000"
    networks:
      - todoapp-network
    depends_on:
      - backend-b
    restart: unless-stopped
  # 前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: todoapp-frontend
    environment:
      VITE_API_URL: http://localhost:3000
    ports:
      - "5173:5173"
    networks:
      - todoapp-network
    depends_on:
      - backend-a
    restart: unless-stopped
    stdin_open: true
    tty: true

networks:
  todoapp-network:
    driver: bridge

volumes:
  postgres_data: