name: Docker - 构建并推送镜像

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  workflow_dispatch:  # 允许手动触发

jobs:
  build-and-push:
    name: 构建并推送 Docker 镜像
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [frontend, backend-a, backend-b]
    
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v3
      
      - name: 🔧 设置 QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: 🐳 设置 Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: 🔐 配置 AWS 凭证
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: 🔐 登录 AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: 📋 提取元数据
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/todoapp-${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=TodoApp ${{ matrix.service }}
            org.opencontainers.image.description=智能待办清单 - ${{ matrix.service }}
            org.opencontainers.image.vendor=YourName
      
      - name: 🏗️ 构建并推送 ${{ matrix.service }}
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}
      
      - name: 📝 输出镜像信息
        run: |
          echo "🎉 镜像构建成功！"
          echo "📦 服务: ${{ matrix.service }}"
          echo "🏷️ 标签: ${{ steps.meta.outputs.tags }}"
          echo "🔗 ECR: https://${{ secrets.AWS_REGION }}.console.aws.amazon.com/ecr/repositories/private/${{ secrets.AWS_ACCOUNT_ID }}/todoapp-${{ matrix.service }}"
  
  # 构建完成后的通知
  notify:
    name: 📢 构建通知
    runs-on: ubuntu-latest
    needs: build-and-push
    if: always()
    
    steps:
      - name: 📊 检查构建状态
        run: |
          if [ "${{ needs.build-and-push.result }}" == "success" ]; then
            echo "✅ 所有 Docker 镜像构建成功！"
            echo "🚀 镜像已推送到 AWS ECR"
          else
            echo "❌ Docker 镜像构建失败"
            exit 1
          fi
